// <auto-generated />
using System;
using InhouseCustomAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InhouseCustomAPI.Migrations
{
    [DbContext(typeof(GameDbContext))]
    partial class GameDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Ban", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("ChampionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PickTurn")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("TeamId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Ban");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+CreepsPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CreepsPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+CsDiffPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CsDiffPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+DamageTakenDiffPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("DamageTakenDiffPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+DamageTakenPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("DamageTakenPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameDataId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameDataId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+GameData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("gameCreation")
                        .HasColumnType("INTEGER");

                    b.Property<int>("gameDuration")
                        .HasColumnType("INTEGER");

                    b.Property<long>("gameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("gameMode")
                        .HasColumnType("TEXT");

                    b.Property<string>("gameType")
                        .HasColumnType("TEXT");

                    b.Property<string>("gameVersion")
                        .HasColumnType("TEXT");

                    b.Property<int>("mapId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("platformId")
                        .HasColumnType("TEXT");

                    b.Property<int>("queueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("seasonId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("GameData");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+GoldPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("GoldPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Participant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameDataId")
                        .HasColumnType("TEXT");

                    b.Property<int>("championId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("playerId")
                        .HasColumnType("TEXT");

                    b.Property<int>("spell1Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("spell2Id")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("statsId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("timelineId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameDataId");

                    b.HasIndex("statsId");

                    b.HasIndex("timelineId");

                    b.ToTable("Participant");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+ParticipantIdentity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameDataId")
                        .HasColumnType("TEXT");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("playerId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameDataId");

                    b.HasIndex("playerId");

                    b.ToTable("ParticipantIdentity");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<long>("accountId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("currentAccountId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("currentPlatformId")
                        .HasColumnType("TEXT");

                    b.Property<string>("matchHistoryUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("platformId")
                        .HasColumnType("TEXT");

                    b.Property<int>("profileIcon")
                        .HasColumnType("INTEGER");

                    b.Property<long>("summonerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("summonerName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+PlayerLeaderboardStat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("assists")
                        .HasColumnType("INTEGER");

                    b.Property<double>("averageKDA")
                        .HasColumnType("REAL");

                    b.Property<int>("deaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("iconId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ign")
                        .HasColumnType("TEXT");

                    b.Property<int>("kills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("losses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("mostPlayedChamp")
                        .HasColumnType("INTEGER");

                    b.Property<long>("summonerId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("winPercent")
                        .HasColumnType("REAL");

                    b.Property<int>("wins")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("PlayerLeaderboardStats");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Stats", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("assists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("champLevel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("combatPlayerScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("damageDealtToObjectives")
                        .HasColumnType("INTEGER");

                    b.Property<int>("damageDealtToTurrets")
                        .HasColumnType("INTEGER");

                    b.Property<int>("damageSelfMitigated")
                        .HasColumnType("INTEGER");

                    b.Property<int>("deaths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("doubleKills")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstBloodAssist")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstBloodKill")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstInhibitorAssist")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstInhibitorKill")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstTowerAssist")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("firstTowerKill")
                        .HasColumnType("INTEGER");

                    b.Property<int>("goldEarned")
                        .HasColumnType("INTEGER");

                    b.Property<int>("goldSpent")
                        .HasColumnType("INTEGER");

                    b.Property<int>("inhibitorKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("item6")
                        .HasColumnType("INTEGER");

                    b.Property<int>("killingSprees")
                        .HasColumnType("INTEGER");

                    b.Property<int>("kills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("largestCriticalStrike")
                        .HasColumnType("INTEGER");

                    b.Property<int>("largestKillingSpree")
                        .HasColumnType("INTEGER");

                    b.Property<int>("largestMultiKill")
                        .HasColumnType("INTEGER");

                    b.Property<int>("longestTimeSpentLiving")
                        .HasColumnType("INTEGER");

                    b.Property<int>("magicDamageDealt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("magicDamageDealtToChampions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("magicalDamageTaken")
                        .HasColumnType("INTEGER");

                    b.Property<int>("neutralMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("neutralMinionsKilledEnemyJungle")
                        .HasColumnType("INTEGER");

                    b.Property<int>("neutralMinionsKilledTeamJungle")
                        .HasColumnType("INTEGER");

                    b.Property<int>("objectivePlayerScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("pentaKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk0Var1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk0Var2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk0Var3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk1Var1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk1Var2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk1Var3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk2Var1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk2Var2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk2Var3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk3Var1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk3Var2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk3Var3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk4Var1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk4Var2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk4Var3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk5Var1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk5Var2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perk5Var3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perkPrimaryStyle")
                        .HasColumnType("INTEGER");

                    b.Property<int>("perkSubStyle")
                        .HasColumnType("INTEGER");

                    b.Property<int>("physicalDamageDealt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("physicalDamageDealtToChampions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("physicalDamageTaken")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore3")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore4")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore5")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore6")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore7")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore8")
                        .HasColumnType("INTEGER");

                    b.Property<int>("playerScore9")
                        .HasColumnType("INTEGER");

                    b.Property<int>("quadraKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("sightWardsBoughtInGame")
                        .HasColumnType("INTEGER");

                    b.Property<int>("statPerk0")
                        .HasColumnType("INTEGER");

                    b.Property<int>("statPerk1")
                        .HasColumnType("INTEGER");

                    b.Property<int>("statPerk2")
                        .HasColumnType("INTEGER");

                    b.Property<int>("timeCCingOthers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalDamageDealt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalDamageDealtToChampions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalDamageTaken")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalHeal")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalPlayerScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalScoreRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalTimeCrowdControlDealt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalUnitsHealed")
                        .HasColumnType("INTEGER");

                    b.Property<int>("tripleKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trueDamageDealt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trueDamageDealtToChampions")
                        .HasColumnType("INTEGER");

                    b.Property<int>("trueDamageTaken")
                        .HasColumnType("INTEGER");

                    b.Property<int>("turretKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("unrealKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("visionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("visionWardsBoughtInGame")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wardsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("wardsPlaced")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("win")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Stats");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("FirstBaron")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstBlood")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstDragon")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstInhibitor")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstRiftHerald")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstTower")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("GameDataId")
                        .HasColumnType("TEXT");

                    b.Property<int>("InhibitorKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TowerKills")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Win")
                        .HasColumnType("TEXT");

                    b.Property<int>("baronKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionVictoryScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dragonKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("riftHeraldKills")
                        .HasColumnType("INTEGER");

                    b.Property<int>("vilemawKills")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameDataId");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Timeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("creepsPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("csDiffPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("damageTakenDiffPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("damageTakenPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("goldPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.Property<string>("lane")
                        .HasColumnType("TEXT");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("role")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("xpDiffPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("xpPerMinDeltasId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("creepsPerMinDeltasId");

                    b.HasIndex("csDiffPerMinDeltasId");

                    b.HasIndex("damageTakenDiffPerMinDeltasId");

                    b.HasIndex("damageTakenPerMinDeltasId");

                    b.HasIndex("goldPerMinDeltasId");

                    b.HasIndex("xpDiffPerMinDeltasId");

                    b.HasIndex("xpPerMinDeltasId");

                    b.ToTable("Timeline");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+XpDiffPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("XpDiffPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+XpPerMinDeltas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<double>("_010")
                        .HasColumnType("REAL");

                    b.Property<double>("_1020")
                        .HasColumnType("REAL");

                    b.Property<double>("_2030")
                        .HasColumnType("REAL");

                    b.Property<double>("_30End")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("XpPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDbContext+Champ", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Champs");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDbContext+StatObject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Stat")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stat2")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stat3")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stat4")
                        .HasColumnType("TEXT");

                    b.Property<string>("Stat5")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StatObjects");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+AssistingParticipantIds", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("AssistingParticipantIds");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FrameId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("afterId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("beforeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("buildingType")
                        .HasColumnType("TEXT");

                    b.Property<int?>("creatorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("itemId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("killerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("laneType")
                        .HasColumnType("TEXT");

                    b.Property<string>("levelUpType")
                        .HasColumnType("TEXT");

                    b.Property<string>("monsterSubType")
                        .HasColumnType("TEXT");

                    b.Property<string>("monsterType")
                        .HasColumnType("TEXT");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("skillSlot")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("teamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("timestamp")
                        .HasColumnType("INTEGER");

                    b.Property<string>("towerType")
                        .HasColumnType("TEXT");

                    b.Property<string>("type")
                        .HasColumnType("TEXT");

                    b.Property<int?>("victimId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("wardType")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("FrameId");

                    b.HasIndex("positionId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Frame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GameTimelineId")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("participantFramesId")
                        .HasColumnType("TEXT");

                    b.Property<int>("timestamp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameTimelineId");

                    b.HasIndex("participantFramesId");

                    b.ToTable("Frames");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+GameTimeline", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("frameInterval")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("gameId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameTimelines");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+ParticipantFrame", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("FrameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FrameId");

                    b.HasIndex("positionId");

                    b.ToTable("ParticipantFrame");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+ParticipantFrames", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf10Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf1Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf2Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf3Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf4Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf5Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf6Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf7Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf8Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("pf9Id")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("pf10Id");

                    b.HasIndex("pf1Id");

                    b.HasIndex("pf2Id");

                    b.HasIndex("pf3Id");

                    b.HasIndex("pf4Id");

                    b.HasIndex("pf5Id");

                    b.HasIndex("pf6Id");

                    b.HasIndex("pf7Id");

                    b.HasIndex("pf8Id");

                    b.HasIndex("pf9Id");

                    b.ToTable("ParticipantFrames");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("x")
                        .HasColumnType("INTEGER");

                    b.Property<int>("y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_1", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_1");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_10", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_10");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_2");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_3", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_3");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_4", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_4");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_5", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_5");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_6", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_6");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_7", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_7");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_8", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_8");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_9", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("currentGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("dominionScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("jungleMinionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("minionsKilled")
                        .HasColumnType("INTEGER");

                    b.Property<int>("participantId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("positionId")
                        .HasColumnType("TEXT");

                    b.Property<int>("teamScore")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalGold")
                        .HasColumnType("INTEGER");

                    b.Property<int>("xp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("_9");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Ban", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+Team", null)
                        .WithMany("bans")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Game", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+GameData", "GameData")
                        .WithMany()
                        .HasForeignKey("GameDataId");

                    b.Navigation("GameData");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Participant", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+GameData", null)
                        .WithMany("participants")
                        .HasForeignKey("GameDataId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+Stats", "stats")
                        .WithMany()
                        .HasForeignKey("statsId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+Timeline", "timeline")
                        .WithMany()
                        .HasForeignKey("timelineId");

                    b.Navigation("stats");

                    b.Navigation("timeline");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+ParticipantIdentity", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+GameData", null)
                        .WithMany("participantIdentities")
                        .HasForeignKey("GameDataId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+Player", "player")
                        .WithMany()
                        .HasForeignKey("playerId");

                    b.Navigation("player");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Team", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+GameData", null)
                        .WithMany("teams")
                        .HasForeignKey("GameDataId");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Timeline", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+CreepsPerMinDeltas", "creepsPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("creepsPerMinDeltasId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+CsDiffPerMinDeltas", "csDiffPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("csDiffPerMinDeltasId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+DamageTakenDiffPerMinDeltas", "damageTakenDiffPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("damageTakenDiffPerMinDeltasId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+DamageTakenPerMinDeltas", "damageTakenPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("damageTakenPerMinDeltasId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+GoldPerMinDeltas", "goldPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("goldPerMinDeltasId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+XpDiffPerMinDeltas", "xpDiffPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("xpDiffPerMinDeltasId");

                    b.HasOne("InhouseCustomAPI.Models.GameDataModel+XpPerMinDeltas", "xpPerMinDeltas")
                        .WithMany()
                        .HasForeignKey("xpPerMinDeltasId");

                    b.Navigation("creepsPerMinDeltas");

                    b.Navigation("csDiffPerMinDeltas");

                    b.Navigation("damageTakenDiffPerMinDeltas");

                    b.Navigation("damageTakenPerMinDeltas");

                    b.Navigation("goldPerMinDeltas");

                    b.Navigation("xpDiffPerMinDeltas");

                    b.Navigation("xpPerMinDeltas");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+AssistingParticipantIds", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Event", null)
                        .WithMany("assistingParticipant")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Event", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Frame", null)
                        .WithMany("events")
                        .HasForeignKey("FrameId");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Frame", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+GameTimeline", null)
                        .WithMany("frames")
                        .HasForeignKey("GameTimelineId");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+ParticipantFrames", "participantFrames")
                        .WithMany()
                        .HasForeignKey("participantFramesId");

                    b.Navigation("participantFrames");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+ParticipantFrame", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Frame", null)
                        .WithMany("participantFramesList")
                        .HasForeignKey("FrameId");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+ParticipantFrames", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_10", "pf10")
                        .WithMany()
                        .HasForeignKey("pf10Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_1", "pf1")
                        .WithMany()
                        .HasForeignKey("pf1Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_2", "pf2")
                        .WithMany()
                        .HasForeignKey("pf2Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_3", "pf3")
                        .WithMany()
                        .HasForeignKey("pf3Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_4", "pf4")
                        .WithMany()
                        .HasForeignKey("pf4Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_5", "pf5")
                        .WithMany()
                        .HasForeignKey("pf5Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_6", "pf6")
                        .WithMany()
                        .HasForeignKey("pf6Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_7", "pf7")
                        .WithMany()
                        .HasForeignKey("pf7Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_8", "pf8")
                        .WithMany()
                        .HasForeignKey("pf8Id");

                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+_9", "pf9")
                        .WithMany()
                        .HasForeignKey("pf9Id");

                    b.Navigation("pf1");

                    b.Navigation("pf10");

                    b.Navigation("pf2");

                    b.Navigation("pf3");

                    b.Navigation("pf4");

                    b.Navigation("pf5");

                    b.Navigation("pf6");

                    b.Navigation("pf7");

                    b.Navigation("pf8");

                    b.Navigation("pf9");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_1", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_10", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_2", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_3", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_4", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_5", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_6", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_7", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_8", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+_9", b =>
                {
                    b.HasOne("InhouseCustomAPI.Models.GameTimelineModel+Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");

                    b.Navigation("position");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+GameData", b =>
                {
                    b.Navigation("participantIdentities");

                    b.Navigation("participants");

                    b.Navigation("teams");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameDataModel+Team", b =>
                {
                    b.Navigation("bans");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Event", b =>
                {
                    b.Navigation("assistingParticipant");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+Frame", b =>
                {
                    b.Navigation("events");

                    b.Navigation("participantFramesList");
                });

            modelBuilder.Entity("InhouseCustomAPI.Models.GameTimelineModel+GameTimeline", b =>
                {
                    b.Navigation("frames");
                });
#pragma warning restore 612, 618
        }
    }
}
